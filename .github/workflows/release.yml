name: Release

on:
  push:
    tags:
      - "*"

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          # fetch-depth: 0 is required for the change log to work correctly.
          # For the details please see https://goreleaser.com/ci/actions/
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18

      - name: Run GoReleaser for Rport Build
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Rport Build Commit Info
        id: rport_commit_info
        run: |
          echo ::set-output name=commit_sha::$(git rev-parse HEAD)

      - name: Checkout Rport Plus
        uses: actions/checkout@v3
        with:
          repository: cloudradar-monitoring/rport-plus
          ref: ${{github.ref_name}}
          ssh-key: ${{ secrets.RPORT_PLUS_PRIV_KEY }}
          path: rport-plus

      - name: Build and release Rport Plus
        id: rport_plus_build
        env:
          RPORT_GIT_REF: ${{github.ref_name}}
          RPORT_COMMIT_ID: ${{ steps.rport_commit_info.outputs.commit_sha }}
        run: |
          dpkg -l|grep -q python3-requests || apt-get -y install python3-requests
          pwd
          cd rport-plus
          echo ::set-output name=repo_name::$(basename `git rev-parse --show-toplevel`)
          make build
          ls -la rport-plus.so
          echo "=================================================================="
          echo "âœ… Successfully built rport-plus.so version ${GITHUB_REF_NAME}"
          echo "=================================================================="
          export PLUS_ARTIFACT=rport-plus_${GITHUB_REF_NAME}_Linux_$(uname -m).tar.gz
          tar czf ${PLUS_ARTIFACT} README.md license.txt rport-plus.so
          tar tzf ${PLUS_ARTIFACT}
          ls -la ${PLUS_ARTIFACT}
          # Get the release id of the tag
          export GITHUB_TOKEN=${GITHUB_TOKEN}
          RELEASE_ID=$(../.github/scripts/gh-release-id.py ${GITHUB_REF_NAME})
          echo "ðŸš© RELEASE_ID=$RELEASE_ID"
          curl -v -s --fail -T ${PLUS_ARTIFACT} \
           -H "Authorization: token ${GITHUB_TOKEN}" -H "Content-Type: $(file -b --mime-type ${PLUS_ARTIFACT})" \
           -H "Accept: application/vnd.github.v3+json" \
           "https://uploads.github.com/repos/cloudradar-monitoring/rport/releases/${RELEASE_ID}/assets?name=$(basename ${PLUS_ARTIFACT})"|tee upload.log|jq